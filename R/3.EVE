Here is the organized, aesthetic format with clear sections, titles, and code blocks for **GitHub**:

---

# Executing the Expression Variance and Evolution Model (EVE)

This guide demonstrates the implementation of the **Expression Variance and Evolution (EVE) Model** for microbial dataset analysis. It provides a structured approach to analyze divergence and diversity patterns among genes or ASVs across species.

---

## EVE Publication Reference

For detailed methodology, see the original publication: [https://pubmed.ncbi.nlm.nih.gov/26169525/](https://pubmed.ncbi.nlm.nih.gov/26169525/)

---

## **Step 1: Load Libraries**

```r
# Load required libraries
devtools::install_gitlab("sandve-lab/evemodel")
library(evemodel)
library(ape)
library(tidyverse)
```

---

## **Step 2: Load and Prepare Data**

### Counts Data

Load count data and prepare it for analysis.

```r
counts_metadata <- read.csv("counts_metadata.csv")  # Counts and metadata file

# Combine SampleID and Species for unique IDs
counts_metadata$Combined_ID <- paste(counts_metadata$Species, counts_metadata$SampleID, sep = "-")
counts_metadata <- counts_metadata[, c("Combined_ID", setdiff(names(counts_metadata), "Combined_ID"))]

# Extract count data, convert to matrix, and apply log transform
bacteriaTbl <- counts_metadata[, 21:ncol(counts_metadata)]
bacteriaMat <- log10(as.matrix(bacteriaTbl) + 1)
rownames(bacteriaMat) <- counts_metadata$Combined_ID
bacteriaMat <- t(bacteriaMat)
```

---

## **Step 3: Define Species Tree**

Define the phylogenetic tree structure for your species.

```r
PacificTree <- read.tree(text="(Homophyllia_bowerbanki:0.000571477,((...));")
plot(PacificTree, cex=0.5)
PacificTree$tip.label
```

---

## **Step 4: Run Beta Shared Test**

This test detects genes with high expression divergence, potentially candidates for adaptation or conservation.

```r
colSpecies <- sub("-.*$", "", colnames(bacteriaMat))
res <- betaSharedTest(tree = PacificTree, gene.data = bacteriaMat, colSpecies = colSpecies)

# View shared beta parameter
res$sharedBeta
```

---

## **Step 5: Calculate P-Values**

Calculate and extract p-values for statistical analysis.

```r
# P-value calculation
pval <- pchisq(res$LRT, df = 1, lower.tail = FALSE)

# Combine results into a data frame
EVE_results <- as.data.frame(cbind(res$LRT, res$indivBetaRes$par, pval, bacteriaMat))
write.csv(EVE_results, file="EVE_results.csv")
```

---

## **Step 6: Filter Significant Genes and Create Volcano Plot**

Visualize results with a volcano plot, highlighting significant findings.

```r
# Annotate EVE categories
EVE_results$type <- ifelse(EVE_results$beta < res$sharedBeta, "Lineage Specific", "Highly Variable")
EVE_results$significant <- ifelse(EVE_results$pval <= 0.1, "Significant", "Not Significant")

# Volcano Plot
volcano_plot <- ggplot(data = EVE_results, aes(x = log(beta), y = -log(pval), color = type)) +
  geom_point() +
  scale_color_manual(values = c("#f37225", "#00b9e3", "black")) +
  labs(color = "EVE Category", title = "EVE Volcano Plot") +
  theme_light()
print(volcano_plot)
```

---

## **Step 7: Perform PCA on Highly Variable and Lineage-Specific Genes**

Generate a PCA plot to analyze patterns in gene variability.

```r
# Example PCA of Highly Variable Genes
pca_results <- prcomp(HV_metadata[,18:ncol(HV_metadata)], scale. = TRUE)
ggplot(pca_data, aes(x = PC1, y = PC2, color = Coral.Species)) +
  geom_point(size = 3, alpha = 0.8) +
  stat_ellipse(level = 0.95, linetype = 2) +
  labs(title = "PCA of Highly Variable Genes") +
  theme_minimal()
```

---

## **Step 8: Save Results**

Export your significant results for downstream analysis.

```r
write.csv(HV_metadata, file="HighlyVariable_rlogs_orthogroup.csv")
write.csv(LS_metadata, file="LineageSpecific_rlogs_orthogroup.csv")
```

---

This guide covers the **core steps for executing the EVE Model** and visualizing key outputs, providing a structured approach for analyzing microbial divergence and diversity patterns. 

---

